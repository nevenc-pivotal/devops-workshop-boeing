buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
		springDependencyManagementVersion = '1.0.3.RELEASE'
	}
	repositories {
            jcenter()
        }
        dependencies {
            classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
            classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}")
	    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
    gitRepositoryRoot = new File("${project.rootDir}/../../../..")
}

import org.apache.tools.ant.filters.*

processResources {
    filter ReplaceTokens, tokens: [
		"application.name": project.property("application.name"),
		"application.description": project.property("application.description"),
        "application.version": project.property("version")
    ]
}

apply plugin: 'com.jfrog.artifactory'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
		mavenBom "com.vaadin:vaadin-bom:8.1.5"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR3"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:1.5.0.RELEASE"
    }
}

dependencies {
    compile('io.pivotal:cloud-native-spring:1.0-SNAPSHOT')
	compileOnly('org.projectlombok:lombok:1.16.18')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-feign')
	compile('org.springframework.cloud:spring-cloud-starter-ribbon')
	compile('com.vaadin:vaadin-spring-boot-starter')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-service-registry')
    compile('io.pivotal.spring.cloud:spring-cloud-services-starter-circuit-breaker')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

repositories {
    maven {
        url "https://repo.spring.io/plugins-release"
    }
	jcenter()
}

jar {
    excludes = ['**/application.yml']
}

task execJar (type: Jar, dependsOn: jar) {
    classifier = 'exec'
    from sourceSets.main.output
}

bootRepackage  {
    withJarTask = tasks['execJar']
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'io.pivotal'
            from components.java
        }
    }
	repositories {
        mavenLocal()
    }
}

artifactory {
    contextUrl = System.env.ArtifactoryInstance ?: 'http://localhost:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
            username = System.env.ArtifactoryUser // The publisher user name
            password = System.env.ArtifactoryKey // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}